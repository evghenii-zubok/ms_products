openapi: 3.0.0
info:
  title: 'Warehouse Management API Docs'
  description: ''
  contact:
    email: evghenii.zubok@gmail.com
  version: 0.0.1
  x-logo:
    url: 'https://picsum.photos/190/90?text=Warehouse Management API Docs'
paths:
  /api/login:
    post:
      tags:
        - Authentication
      summary: Authentication
      description: 'Authenticate to receive access token to be used with other Api calls. Use "Authorize" button to get authenticated. Remeber to add "Bearer " suffix to token before using it.'
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              properties:
                client_id:
                  type: string
                  default: 'Bob Lee'
                client_secret:
                  type: string
                  default: MySuperSecretPassword
              type: object
      responses:
        200:
          description: Authenticated
          content:
            application/json:
              schema:
                properties:
                  status:
                    description: status
                    type: boolean
                    default: 'true'
                  token:
                    description: token
                    type: string
                    default: 25|iPUe4XPd6zfuNMSzRJQxnKnFh8YsYvK6LF9Xei39
                type: object
        400:
          description: 'Bad request'
        401:
          description: 'Missing Authentication'
        500:
          description: 'Internal server error'
  /api/v1/product:
    post:
      tags:
        - 'Product CRUD'
      summary: 'Create new product'
      operationId: store
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ean:
                  type: string
                  default: '0123456789123'
                name:
                  type: string
                  default: Goleador
                qty:
                  type: integer
                  default: '5000'
                price:
                  type: decimal
                  default: '0.10'
              type: object
      responses:
        200:
          description: 'Successfull operation'
          content:
            application/json:
              schema:
                properties:
                  status:
                    description: Status
                    type: boolean
                    default: 'true'
                  data:
                    type: object
                type: object
        400:
          description: 'Bad request'
        401:
          description: Unauthorized
        500:
          description: 'Internal server error'
  '/api/v1/product/{id}':
    get:
      tags:
        - 'Product CRUD'
      summary: 'Get product by ID'
      operationId: show
      parameters:
        -
          name: id
          in: path
          description: 'Product to search ID.'
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 'Successfull operation'
          content:
            application/json:
              schema:
                properties:
                  status:
                    description: Status
                    type: boolean
                    default: 'true'
                  data:
                    description: 'Requested product in json format'
                    type: object
                type: object
        400:
          description: 'Bad request'
        401:
          description: Unauthorized
        500:
          description: 'Internal server error'
    put:
      tags:
        - 'Product CRUD'
      summary: 'Update product'
      operationId: update
      parameters:
        -
          name: id
          in: path
          description: 'Product ID.'
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  default: Goleador
                qty:
                  type: integer
                  default: '5000'
                price:
                  type: number
                  format: double
                  default: '0.12'
              type: object
      responses:
        200:
          description: 'Successfull operation'
          content:
            application/json:
              schema:
                properties:
                  status:
                    description: Status
                    type: boolean
                    default: 'true'
                  data:
                    description: 'Updated product in json format'
                    type: object
                type: object
        400:
          description: 'Bad request'
        401:
          description: Unauthorized
        500:
          description: 'Internal server error'
    delete:
      tags:
        - 'Product CRUD'
      summary: 'Delete product'
      operationId: destroy
      parameters:
        -
          name: id
          in: path
          description: 'Product ID'
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 'Successfull operation'
          content:
            application/json:
              schema:
                properties:
                  status:
                    description: Status
                    type: boolean
                    default: 'true'
                  data:
                    type: string
                    default: Deleted
                type: object
        400:
          description: 'Bad request'
        401:
          description: Unauthorized
        500:
          description: 'Internal server error'
tags:
  -
    name: Authentication
    description: Authentication
  -
    name: 'Product CRUD'
    description: 'Product CRUD'
components:
  securitySchemes:
    sanctum:
      type: apiKey
      description: 'Enter token in format (Bearer <token>)'
      name: Authorization
      in: header
security:
  -
    sanctum: []
